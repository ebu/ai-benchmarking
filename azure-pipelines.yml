# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Test'
  strategy:
    matrix:
      Ubuntu-Python35:
        imageName: 'Ubuntu-16.04'
        python.version: '3.5'
      Ubuntu-Python36:
        imageName: 'Ubuntu-16.04'
        python.version: '3.6'
      Ubuntu-Python37:
        imageName: 'Ubuntu-16.04'
        python.version: '3.7'
      Windows-Python37:
        imageName: 'vs2017-win2016'
        python.version: '3.7'
      Mac-Python37:
        imageName: 'macos-10.13'
        python.version: '3.7'

  pool:
    vmImage: $(imageName)

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install ".[test]"
    displayName: 'Install dependencies'

  - script: |
      pip install pytest
      pytest tests --doctest-modules --verbose --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()


- job: 'CodeCoverage'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        architecture: 'x64'

    - script: python -m pip install --upgrade pip && pip install ".[test]"
      displayName: 'Install dependencies'

    - script: python -m pip install --upgrade pip && pip install pytest && pip install pytest-cov
      displayName: 'Install pytest-cov'

    - script: pytest tests --cov src --cov-report xml --cov-report html
      displayName: 'Check code coverage'

    - task: PublishCodeCoverageResults@0
      inputs:
#        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/benchmarkstt/coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/benchmarkstt/htmlcov'

- job: 'Lint'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install pycodestyle
    displayName: 'Install pycodestyle'

  - script: pycodestyle
    displayName: 'pycodestyle'

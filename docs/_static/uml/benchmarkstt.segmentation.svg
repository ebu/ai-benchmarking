<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="307px" preserveAspectRatio="none" style="width:340px;height:307px;" version="1.1" viewBox="0 0 340 307" width="340px" zoomAndPan="magnify"><defs><filter height="300%" id="f1nlwc41td4qol" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="Helvetica" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="221" x="50.5" y="13.8604">benchmarkstt.segmentation</text><!--MD5=[65eb5fcee437765d99707c9196661bb6]
cluster benchmarkstt.segmentation--><rect fill="#FFFFFF" filter="url(#f1nlwc41td4qol)" height="115" style="stroke: #000000; stroke-width: 1.5;" width="208" x="61" y="25"/><path d="M263,26 L263,32 L253,42 L61,42 " fill="none" style="stroke: #000000; stroke-width: 1.5;"/><text fill="#000000" font-family="Helvetica" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="192" x="64" y="36.7803">benchmarkstt.segmentation</text><!--MD5=[bbd7f55af96c8522598147a787b5c5b9]
cluster benchmarkstt.segmentation.core--><rect fill="#FFFFFF" filter="url(#f1nlwc41td4qol)" height="126" style="stroke: #000000; stroke-width: 1.5;" width="316" x="7" y="164"/><path d="M243,165 L243,171 L233,181 L7,181 " fill="none" style="stroke: #000000; stroke-width: 1.5;"/><text fill="#000000" font-family="Helvetica" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="226" x="10" y="175.7803">benchmarkstt.segmentation.core</text><!--MD5=[002c34d32132957f7ddeee40910e80d3]
class benchmarkstt.segmentation.Base--><a href="https://benchmarkstt.readthedocs.io/en/latest/modules/benchmarkstt.segmentation.html#benchmarkstt.segmentation.Base" target="_top" title="https://benchmarkstt.readthedocs.io/en/latest/modules/benchmarkstt.segmentation.html#benchmarkstt.segmentation.Base" xlink:actuate="onRequest" xlink:href="https://benchmarkstt.readthedocs.io/en/latest/modules/benchmarkstt.segmentation.html#benchmarkstt.segmentation.Base" xlink:show="new" xlink:title="https://benchmarkstt.readthedocs.io/en/latest/modules/benchmarkstt.segmentation.html#benchmarkstt.segmentation.Base" xlink:type="simple"><rect fill="#FFFFFF" filter="url(#f1nlwc41td4qol)" height="66" id="benchmarkstt.segmentation.Base" style="stroke: #000000; stroke-width: 1.0;" width="82" x="124" y="58"/><ellipse cx="148.9" cy="74" fill="#C2C2C2" rx="11" ry="11" style="stroke: #000000; stroke-width: 1.0;"/><path d="M151.3731,80.1431 Q150.7921,80.4419 150.1529,80.5913 Q149.5138,80.7407 148.8082,80.7407 Q146.3014,80.7407 144.9815,79.0889 Q143.6617,77.437 143.6617,74.3159 Q143.6617,71.1865 144.9815,69.5347 Q146.3014,67.8828 148.8082,67.8828 Q149.5138,67.8828 150.1612,68.0322 Q150.8087,68.1816 151.3731,68.4805 L151.3731,71.2031 Q150.7423,70.6221 150.1488,70.3523 Q149.5553,70.0825 148.9244,70.0825 Q147.5797,70.0825 146.8949,71.1492 Q146.2101,72.2158 146.2101,74.3159 Q146.2101,76.4077 146.8949,77.4744 Q147.5797,78.541 148.9244,78.541 Q149.5553,78.541 150.1488,78.2712 Q150.7423,78.0015 151.3731,77.4204 Z "/><text fill="#000000" font-family="Helvetica" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="28" x="165.1" y="77.2402">Base</text><line style="stroke: #000000; stroke-width: 1.5;" x1="125" x2="205" y1="90" y2="90"/><ellipse cx="135" cy="116" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="Helvetica" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="144" y="117.4702">__iter__()</text><line style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="125" x2="128" y1="103.5" y2="103.5"/><text fill="#000000" font-family="Helvetica" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="128" y="105.9702">Public Methods</text><line style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="202" x2="205" y1="103.5" y2="103.5"/></a><!--MD5=[e6682fb9f1ffb38935fc3ffe4e96004d]
class benchmarkstt.segmentation.core.Simple--><a href="https://benchmarkstt.readthedocs.io/en/latest/modules/benchmarkstt.segmentation.core.html#benchmarkstt.segmentation.core.Simple" target="_top" title="https://benchmarkstt.readthedocs.io/en/latest/modules/benchmarkstt.segmentation.core.html#benchmarkstt.segmentation.core.Simple" xlink:actuate="onRequest" xlink:href="https://benchmarkstt.readthedocs.io/en/latest/modules/benchmarkstt.segmentation.core.html#benchmarkstt.segmentation.core.Simple" xlink:show="new" xlink:title="https://benchmarkstt.readthedocs.io/en/latest/modules/benchmarkstt.segmentation.core.html#benchmarkstt.segmentation.core.Simple" xlink:type="simple"><rect fill="#FFFFFF" filter="url(#f1nlwc41td4qol)" height="77" id="benchmarkstt.segmentation.core.Simple" style="stroke: #000000; stroke-width: 1.0;" width="283" x="23.5" y="197"/><ellipse cx="141.75" cy="213" fill="#C2C2C2" rx="11" ry="11" style="stroke: #000000; stroke-width: 1.0;"/><path d="M144.2231,219.1431 Q143.6421,219.4419 143.0029,219.5913 Q142.3638,219.7407 141.6582,219.7407 Q139.1514,219.7407 137.8315,218.0889 Q136.5117,216.437 136.5117,213.3159 Q136.5117,210.1865 137.8315,208.5347 Q139.1514,206.8828 141.6582,206.8828 Q142.3638,206.8828 143.0112,207.0322 Q143.6587,207.1816 144.2231,207.4805 L144.2231,210.2031 Q143.5923,209.6221 142.9988,209.3523 Q142.4053,209.0825 141.7744,209.0825 Q140.4297,209.0825 139.7449,210.1492 Q139.0601,211.2158 139.0601,213.3159 Q139.0601,215.4077 139.7449,216.4744 Q140.4297,217.541 141.7744,217.541 Q142.4053,217.541 142.9988,217.2712 Q143.5923,217.0015 144.2231,216.4204 Z "/><text fill="#000000" font-family="Helvetica" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="162.25" y="216.2402">Simple</text><line style="stroke: #000000; stroke-width: 1.5;" x1="24.5" x2="305.5" y1="229" y2="229"/><ellipse cx="34.5" cy="255" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="Helvetica" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="43.5" y="256.4702">__init__(text: str, pattern='[\n\t\s]+', normalizer=None)</text><ellipse cx="34.5" cy="266" fill="#A6A6A6" rx="3" ry="3" style="stroke: #545454; stroke-width: 1.0;"/><text fill="#000000" font-family="Helvetica" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="43.5" y="267.4702">__iter__()</text><line style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="24.5" x2="128" y1="242.5" y2="242.5"/><text fill="#000000" font-family="Helvetica" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="128" y="244.9702">Public Methods</text><line style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="202" x2="305.5" y1="242.5" y2="242.5"/></a><!--MD5=[ec6170c354b4ffc3f1d5dae0d39c7b48]
reverse link benchmarkstt.segmentation.Base to benchmarkstt.segmentation.core.Simple--><path d="M165,144.4 C165,161.75 165,180.71 165,196.74 " fill="none" id="benchmarkstt.segmentation.Base&lt;-benchmarkstt.segmentation.core.Simple" style="stroke: #000000; stroke-width: 1.0;"/><polygon fill="none" points="158,144.34,165,124.34,172,144.34,158,144.34" style="stroke: #000000; stroke-width: 1.0;"/><!--MD5=[ffc54f4110b4da7917f5dadd98e8c719]
@startuml

title benchmarkstt.segmentation

skinparam packageStyle Frame
!includeurl https://raw.githubusercontent.com/matthewjosephtaylor/plantuml-style/master/style.pu
package benchmarkstt.segmentation {

	class benchmarkstt.segmentation.Base [[https://benchmarkstt.readthedocs.io/en/latest/modules/benchmarkstt.segmentation.html#benchmarkstt.segmentation.Base]] {
		.. Public Methods ..
		+__iter__()
	}


}

package benchmarkstt.segmentation.core {



	class benchmarkstt.segmentation.core.Simple [[https://benchmarkstt.readthedocs.io/en/latest/modules/benchmarkstt.segmentation.core.html#benchmarkstt.segmentation.core.Simple]] {
		.. Public Methods ..
		+__init__(text: str, pattern='[\\n\\t\\s]+', normalizer=None)
		+__iter__()
	}

}


benchmarkstt.segmentation.core.Simple -up-|> benchmarkstt.segmentation.Base

@enduml

@startuml

title benchmarkstt.segmentation

skinparam packageStyle Frame

skinparam defaultFontName  Helvetica
skinparam sequenceMessageAlign center
skinparam monochrome true

skinparam activity {
	ArrowColor Black
	BackgroundColor White
	BorderColor Black
	BorderThickness 1
}

skinparam actor {
	BackgroundColor White
	BorderColor Black
}

skinparam usecase {
	ArrowColor Black
	BackgroundColor White
	BorderColor Black
	BorderThickness 1
}

skinparam class {
	ArrowColor Black
	BackgroundColor White
	BorderColor Black
	BorderThickness 1
}


skinparam object {
	ArrowColor Black
	BackgroundColor White
	BorderColor Black
}

skinparam package {
	BackgroundColor White
	BorderColor Black
}


skinparam component {
	BackgroundColor White
	InterfaceBackgroundColor White
	BorderColor Black
	InterfaceBorderColor Black
}

skinparam note {
	BackgroundColor White
	BorderColor Black
}

skinparam state {
	ArrowColor Black
	BackgroundColor White
	BorderColor Black
}

skinparam sequence {
	ArrowColor Black
	BackgroundColor White
	ParticipantBackgroundColor White
	BorderColor Black
	LifeLineBorderColor Black
	ParticipantBorderColor Black
	BoxLineColor Black
}

skinparam interface {
	BackgroundColor White
	BorderColor Black
}
package benchmarkstt.segmentation {

	class benchmarkstt.segmentation.Base [[https://benchmarkstt.readthedocs.io/en/latest/modules/benchmarkstt.segmentation.html#benchmarkstt.segmentation.Base]] {
		.. Public Methods ..
		+__iter__()
	}


}

package benchmarkstt.segmentation.core {



	class benchmarkstt.segmentation.core.Simple [[https://benchmarkstt.readthedocs.io/en/latest/modules/benchmarkstt.segmentation.core.html#benchmarkstt.segmentation.core.Simple]] {
		.. Public Methods ..
		+__init__(text: str, pattern='[\\n\\t\\s]+', normalizer=None)
		+__iter__()
	}

}


benchmarkstt.segmentation.core.Simple -up-|> benchmarkstt.segmentation.Base

@enduml

PlantUML version 1.2020.15(Sun Jun 28 13:39:45 CEST 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: BE
--></g></svg>